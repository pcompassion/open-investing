#+title: Axis



#+PROPERTY: header-args:jupyter-python tangle test.py
#+begin_src jupyter-python
display_width = 220

import pandas as pd
pd.set_option('display.width', display_width)

import numpy as np
np.set_printoptions(linewidth=display_width)
#+end_src

#+RESULTS:

#+begin_src jupyter-python

def print_d(np_array):
    print(np_array, type(np_array), np_array.shape)

s = pd.Series([1, 2, 3, 4, 5])
ar = s.to_numpy()
print_d(ar)
ar_2d = ar[:, np.newaxis]

print_d(ar_2d)
ar_2d2 = ar[np.newaxis, :]
print_d(ar_2d2)
print_d(pd.DataFrame(ar_2d))
print_d(pd.DataFrame(ar_2d2))
#+end_src

#+RESULTS:
#+begin_example
[1 2 3 4 5] <class 'numpy.ndarray'> (5,)
[[1]
 [2]
 [3]
 [4]
 [5]] <class 'numpy.ndarray'> (5, 1)
[[1 2 3 4 5]] <class 'numpy.ndarray'> (1, 5)
   0
0  1
1  2
2  3
3  4
4  5 <class 'pandas.core.frame.DataFrame'> (5, 1)
   0  1  2  3  4
0  1  2  3  4  5 <class 'pandas.core.frame.DataFrame'> (1, 5)
#+end_example

#+begin_src jupyter-python
l = []
for e in ar:
    l.append([e])
print(l)
l = []
l.append(ar)
print(l)
#+end_src

#+RESULTS:
: [[1], [2], [3], [4], [5]]
: [array([1, 2, 3, 4, 5])]


#+begin_src jupyter-python
print(np.array(ar).shape)
print(np.array([ar]).shape)

l = []
print(list())
print(list(l))
print(list(list(l)))
#+end_src

#+RESULTS:
: (5,)
: (1, 5)
: []
: []
: []


#+begin_src jupyter-python
two_d_arr = np.array([[[1, 21], [1, 2]], [[3, 41], [3, 4]], [[5, 61], [5, 6]]])
print(two_d_arr.shape)
flattened_arr = two_d_arr.reshape(-1, 3)
print(flattened_arr)
# two_d_arr = np.array([[1, 2], [3, 4, [3]], [5, 6]])
# flattened_arr = two_d_arr.reshape(-1)
# print(flattened_arr)
#+end_src

#+RESULTS:
: (3, 2, 2)
: [[ 1 21  1]
:  [ 2  3 41]
:  [ 3  4  5]
:  [61  5  6]]


#+begin_src jupyter-python
shape = arr.shape

shape_new = shape.append(1)
arr.reshape(shape_new)
#+end_src
